function pixelarteGame(a) {
    function b() {
        a.stats && c.stats.begin(), c.stage.update(), a.stats && c.stats.end();
    }
    var c = this;
    this.stats, this.Ventana = {
        Width: null,
        Height: null
    }, this.Canvas, this.stage, this.maxHeight = a.height, this.maxWidth = a.width, 
    this.loader, this.disctionary, this.Contenedor, this.init = function() {
        function d() {
            c.stage = new createjs.Stage(Canvas), c.stage.mouseMoveOutside = !0, createjs.Touch.enable(c.stage), 
            createjs.Ticker.setFPS(60), createjs.Ticker.addEventListener("tick", b), c.Contenedor = new createjs.Container(), 
            c.stage.addChild(c.Contenedor), window.addEventListener("resize", f, !1), a.stats && e(), 
            f(), g();
        }
        function e() {
            c.stats = new Stats(), c.stats.domElement.style.position = "absolute", c.stats.domElement.style.left = "0px", 
            c.stats.domElement.style.top = "0px", document.body.appendChild(c.stats.domElement);
        }
        function f() {
            "number" == typeof window.innerWidth ? (c.Ventana.Width = window.innerWidth, c.Ventana.Height = window.innerHeight) : document.documentElement && (document.documentElement.clientWidth || document.documentElement.clientHeight) ? (c.Ventana.Width = document.documentElement.clientWidth, 
            c.Ventana.Height = document.documentElement.clientHeight) : document.body && (document.body.clientWidth || document.body.clientHeight) && (c.Ventana.Width = document.body.clientWidth, 
            c.Ventana.Height = document.body.clientHeight);
            var a, b, d = c.maxWidth / c.maxHeight, e = c.Ventana.Width / c.Ventana.Height;
            c.Ventana.Width < c.maxWidth || c.Ventana.Height < c.maxHeight ? d > e ? (a = c.Ventana.Width, 
            b = c.Ventana.Width / d) : e > d && (b = c.Ventana.Height, a = c.Ventana.Height * d) : (b = c.maxHeight, 
            a = c.maxWidth);
            try {
                var f = Math.min(a / c.maxWidth, b / c.maxHeight);
                c.stage.scaleX = f, c.stage.scaleY = f, c.stage.canvas.width = c.maxWidth * f, c.stage.canvas.height = c.maxHeight * f;
            } catch (g) {}
        }
        function g() {
            function b(a) {
                c.disctionary.add(a.item.id, a);
            }
            function d(a) {}
            function e(a) {
                assetsLoaderComplete();
            }
            c.disctionary = new Dictionary(), c.loader = new createjs.LoadQueue(), c.loader.addEventListener("fileload", b), 
            c.loader.addEventListener("progress", d), c.loader.addEventListener("complete", e), 
            c.loader.loadManifest(a.assets);
        }
        Modernizr.canvas && (Canvas = document.getElementById(a.idCanvas), Canvas && Canvas.getContext && (Canvas.getContext("2d"), 
        d()));
    }, this.init();
}

pixelarteGame.prototype = new Dispatcher(), pixelarteGame.prototype.assetsLoaderComplete = function() {
    this.dispatch("assetsLoaderComplete");
};